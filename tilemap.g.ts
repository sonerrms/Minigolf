// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
`, [myTiles.transparency16,sprites.builtin.forestTiles8], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
2222222222222222222222222222222222222222222222222222222222222222
2...............2.......................22.....................2
2......................................22......................2
2.....................................22.......................2
2......2................2............22............2...........2
2......2................2..........................2...........2
2......2................2..........................2...........2
2222222222222222222222222222222222222222222222222222222222222222
`, [myTiles.transparency16,sprites.builtin.forestTiles28,sprites.builtin.forestTiles25], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
2222222222222222222222222222222222222222222222222222222222222222
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2..............................................................2
2222222222222222222222222222222222222222222222222222222222222222
`, [myTiles.transparency16,sprites.builtin.forestTiles8], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,myTiles.tile2,sprites.castle.tileGrass1], TileScale.Sixteen);
            case "level6":
            case "level6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . . . . . . . . . . . . . 2 
2 2 2 2 2 . . . . 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.castle.tileGrass1,myTiles.tile1,myTiles.tile2,sprites.swamp.swampTile13], TileScale.Sixteen);
            case "level8":
            case "level8":return tiles.createTilemap(hex``, img`
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
...............................................................2
...............................................................2
...............................................................2
........................2.........2............................2
........................22.......22............................2
........................222.....222............................2
........................2222...22.2............................2
........................2.22...2..2............................2
2222222222222222....22222..22222..22222....222222222222222222222
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,sprites.castle.tileGrass1,myTiles.tile3,sprites.castle.tilePath5,sprites.castle.tilePath8,sprites.swamp.swampTile13,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level10":
            case "level10":return tiles.createTilemap(hex``, img`
.....................2..........
.....................2..........
.....................2..........
.............222.....2..........
.............2.2.....2..........
.............2.2.....2..........
.............2.2.....2..........
.............2.2.....2..........
.......222..22.2...222..........
.......2.2..2..2...2............
.......2.2..22.2...2222222222222
22.....2.2...2.2................
.22....2.2...2.2................
..22...2.2...2222...............
...22.22.2...22222..........2222
....222..2...222.2222....2222222
`, [myTiles.transparency16,myTiles.tile1,myTiles.tile2,myTiles.tile3,sprites.castle.tileGrass3,sprites.swamp.swampTile13,sprites.castle.tileGrass1,sprites.dungeon.collectibleRedCrystal], TileScale.Sixteen);
            case "level9":
            case "level9":return tiles.createTilemap(hex``, img`
................................
2222222222222.222222222222222...
............2.22...........22...
............2.22...........2....
............2.22...........2....
............2..2...........2....
......222...2..2...222.....2....
......222...2..2...222.....2....
......2.2...2..2...222.....2....
......2.2...2..2...222.....2....
......2.2...2..2...222.....2....
......222...2222...222.....2....
222222222..........222.....2....
2222....2..........222.....2....
........2..........222.....22...
........2...2222...2222222222...
`, [myTiles.transparency16,sprites.swamp.swampTile13,myTiles.tile2,myTiles.tile1,myTiles.tile3,sprites.dungeon.floorLight0], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
            case "myTile0":
            case "tile2":return tile2;
            case "myTile1":
            case "tile3":return tile3;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
